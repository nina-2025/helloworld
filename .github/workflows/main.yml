name: CI

on:
  push:
    branches: ["**"]
    tags: ["v*"]   # tags trigger the publish job below
  pull_request:

jobs:
  lint-and-test:
    name: Lint & Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -U \
            pytest pytest-cov \
            ruff \
            black \
            mypy \
            build \
            -r requirements.txt || true  # ok if no requirements.txt

      - name: Ruff (lint)
        run: ruff check .

      - name: Black (format check)
        run: black --check .

      - name: Mypy (type check)
        run: mypy .

      - name: Pytest
        run: |
          pytest -q --cov --cov-report=xml

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

  build-package:
    name: Build sdist & wheel
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-package]
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # for trusted publishing (PyPI OIDC)
      contents: read
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      # Option A (recommended): PyPI Trusted Publishing via OIDC
      - name: Publish with pypa/gh-action-pypi-publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # If you haven't enabled "Trusted Publishers" on PyPI yet,
          # comment this step and use Option B below with a token.
          skip-existing: true

      # Option B: token-based (fallback)
      # - name: Publish with token
      #   if: failure()  # runs only if OIDC step is not configured/failed
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PYPI_API_TOKEN }}
      #     skip-existing: true
